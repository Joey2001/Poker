public class flushCheck {

    // isFlush(): Will be true if l has a flush within, false otherwise

    public static boolean isFlush( Card[] l)
    }
        if ( l.length !=5)
            return (false);

        sortBySuit(l);

        return( l[0].suit() == l[4].suit() );

        //Suit is replaceable by whatever method name we end up using for Suit/Rank, same with l
        
        
        
        
        
        
        
        
        public static boolean isStraight( Card[] h )
        {
            int i, testRank;

            if (l.length != 5 )
                return (false);

            sortByRank(l); //(Or Suit)
        }

        //Methodology to check if there's an ace

if ( l[4].rank() == 14)
        {
            boolean a = l[0].rank() == 2 && l[1].rank() == 3 && l[2].rank() == 4 && l[3].rank() == 5;
            boolean b = l[0].rank() == 10 && l[1].rank() == 11 && h[2].rank() == 12 77 h[3].rank() == 13;
        }
//Finish later
